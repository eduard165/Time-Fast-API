<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="envios">
  
    <insert id="registrarEnvio" parameterType="modelo.pojo.Envio">
        INSERT INTO envios (
        idCliente,
        numeroGuia,
        costo,
        idEstadoEnvio,
        descripcion
        )
        VALUES (
        #{idCliente},
        #{numeroGuia},
        #{costo},
        #{idEstadoEnvio},
        #{descripcion}
        )
    </insert>
    <update id="actualizarEnvio" parameterType="modelo.pojo.Envio">
        UPDATE envios
        SET
        idCliente = #{idCliente},
        costo = #{costo},
        idEstadoEnvio = #{idEstadoEnvio},
        idColaborador = #{idColaborador},
        descripcion = #{descripcion}
        WHERE idEnvio = #{idEnvio}
    </update>
    <select id="consultarEnvioPorNumeroGuia" parameterType="String" resultType="modelo.pojo.Envio">
        SELECT 
        e.idEnvio,
        e.numeroGuia,
        e.costo,
        e.descripcion,
        se.nombre AS nombreEstadoEnvio,
        CONCAT(c.nombre, ' ', c.apellidoPaterno) AS nombreClienteCompleto,
        c.telefono AS telefonoCliente,
        c.correoElectronico AS correoElectronicoCliente,
        o.calle AS calleOrigen,
        o.numero AS numeroOrigen,
        o.colonia AS coloniaOrigen,
        o.codigoPostal AS codigoPostalOrigen,
        mO.nombre AS municipioOrigen,
        eO.nombre AS estadoOrigen,
        d.calle AS calleDestino,
        d.numero AS numeroDestino,
        d.colonia AS coloniaDestino,
        d.codigoPostal AS codigoPostalDestino,
        mD.nombre AS municipioDestino,
        eD.nombre AS estadoDestino,
        CONCAT(col.nombre, ' ', col.apellidoPaterno, ' ', col.apellidoMaterno) AS nombreColaboradorCompleto,
        col.correoElectronico AS correoElectronicoColaborador
        FROM envios e
        INNER JOIN clientes c ON e.idCliente = c.idCliente
        INNER JOIN estados_envios se ON e.idEstadoEnvio = se.idEstadoEnvio
        LEFT JOIN direcciones o ON e.idEnvio = o.idEnvioOrigen 
        LEFT JOIN direcciones d ON e.idEnvio = d.idEnvioDestino
        LEFT JOIN municipios mO ON o.idMunicipio = mO.idMunicipio
        LEFT JOIN municipios mD ON d.idMunicipio = mD.idMunicipio
        LEFT JOIN estados eO ON mO.idEstado  = eO.idEstado
        LEFT JOIN estados eD ON mD.idEstado  = eD.idEstado
        INNER JOIN colaboradores col ON e.idColaborador = col.idColaborador
        WHERE e.numeroGuia = #{numeroGuia}
    </select>
    <update id="asignarConductor" parameterType="map">
        UPDATE envios
        SET idColaborador = #{idColaborador}
        WHERE idEnvio = #{idEnvio}
    </update>
    <update id="actualizarEstadoEnvio" parameterType="map">
        UPDATE envios
        SET idEstadoEnvio = #{idEstadoEnvio}, descripcion = #{descripcion}
        WHERE idEnvio = #{idEnvio}
    </update>
    <delete id="eliminarEnvio" parameterType="int">
        DELETE FROM envios
        WHERE idEnvio = #{idEnvio}
    </delete>
    <select id="obtenerEnvioPorId" parameterType="int" resultType="modelo.pojo.Envio">
        SELECT *  
        FROM envios 
        WHERE idEnvio = #{idEnvio}
    </select>
    <select id="obtenerEnvioPorNumeroGuia" parameterType="String" resultType="modelo.pojo.Envio">
        SELECT * 
        FROM envios 
        WHERE numeroGuia = #{numeroGuia}
    </select>
    <select id="consultarEnviosPorNumeroPersonal" parameterType="String" resultType="modelo.pojo.Envio">
        SELECT 
        e.idEnvio,
        e.numeroGuia,
        e.costo,
        e.descripcion,
        se.nombre AS nombreEstadoEnvio,
        CONCAT(c.nombre, ' ', c.apellidoPaterno) AS nombreClienteCompleto,
        c.telefono AS telefonoCliente,
        c.correoElectronico AS correoElectronicoCliente,
        o.calle AS calleOrigen,
        o.numero AS numeroOrigen,
        o.colonia AS coloniaOrigen,
        o.codigoPostal AS codigoPostalOrigen,
        mO.nombre AS municipioOrigen,
        eO.nombre AS estadoOrigen,
        d.calle AS calleDestino,
        d.numero AS numeroDestino,
        d.colonia AS coloniaDestino,
        d.codigoPostal AS codigoPostalDestino,
        mD.nombre AS municipioDestino,
        eD.nombre AS estadoDestino,
        CONCAT(col.nombre, ' ', col.apellidoPaterno, ' ', col.apellidoMaterno) AS nombreColaboradorCompleto,
        col.correoElectronico AS correoElectronicoColaborador
        FROM envios e
        INNER JOIN clientes c ON e.idCliente = c.idCliente
        INNER JOIN estados_envios se ON e.idEstadoEnvio = se.idEstadoEnvio
        LEFT JOIN direcciones o ON e.idEnvio = o.idEnvioOrigen 
        LEFT JOIN direcciones d ON e.idEnvio = d.idEnvioDestino
        LEFT JOIN municipios mO ON o.idMunicipio = mO.idMunicipio
        LEFT JOIN municipios mD ON d.idMunicipio = mD.idMunicipio
        LEFT JOIN estados eO ON mO.idEstado = eO.idEstado
        LEFT JOIN estados eD ON mD.idEstado = eD.idEstado
        INNER JOIN colaboradores col ON e.idColaborador = col.idColaborador
        WHERE col.numeroPersonal = #{numeroPersonal};
    </select>
    <select id="consultarEnvios" parameterType="String" resultType="modelo.pojo.Envio">
        SELECT e.*, se.nombre AS nombreEstadoEnvio,
        COALESCE(CONCAT(col.nombre, ' ', col.apellidoPaterno), 'Sin asignar') AS nombreColaboradorCompleto,
        COALESCE(CONCAT(c.nombre, ' ', c.apellidoPaterno), 'Sin asignar') AS nombreClienteCompleto,
        COALESCE(mO.nombre, 'Sin asignar') AS municipioOrigen,
        COALESCE(mD.nombre, 'Sin asignar') AS municipioDestino
        FROM envios e
        INNER JOIN clientes c ON e.idCliente = c.idCliente
        INNER JOIN estados_envios se ON e.idEstadoEnvio = se.idEstadoEnvio
        LEFT JOIN direcciones o ON e.idEnvio = o.idEnvioOrigen 
        LEFT JOIN direcciones d ON e.idEnvio = d.idEnvioDestino
        LEFT JOIN municipios mO ON o.idMunicipio = mO.idMunicipio
        LEFT JOIN municipios mD ON d.idMunicipio = mD.idMunicipio
        LEFT JOIN colaboradores col ON e.idColaborador = col.idColaborador
    </select>
    
</mapper>
